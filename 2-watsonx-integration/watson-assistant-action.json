{
	"name": "BlueBank-action",
	"type": "action",
	"valid": true,
	"status": "Available",
	"created": "2023-08-12T19:52:11.776Z",
	"updated": "2023-09-14T04:59:12.239Z",
	"language": "en",
	"skill_id": "7c1fb445-a742-4ec3-af60-f7225151bd77",
	"workspace": {
		"actions": [
			{
				"steps": [
					{
						"step": "step_001",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text_expression": {
												"concat": [
													{
														"scalar": "One moment please ..."
													}
												]
											}
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "callout",
							"callout": {
								"path": "/api/morb/generate",
								"type": "integration_interaction",
								"method": "POST",
								"internal": {
									"spec_hash_id": "53bc9a5bf35dc7f997de4f113620cc509c8ba2e8e159edc9a6bca25fe8683c97",
									"catalog_item_id": "e31b0508-904c-4d72-b713-6d90a893d337"
								},
								"request_mapping": {
									"body": [
										{
											"value": {
												"skill_variable": "k_docs"
											},
											"parameter": "k_docs"
										},
										{
											"value": {
												"expression": "input.text"
											},
											"parameter": "prompt"
										},
										{
											"value": {
												"skill_variable": "model_name"
											},
											"parameter": "model_name"
										},
										{
											"value": {
												"skill_variable": "model_parameters"
											},
											"parameter": "model_parameters"
										}
									]
								},
								"result_variable": "step_001_result_1"
							}
						},
						"variable": "step_001",
						"next_step": "step_825"
					},
					{
						"step": "step_825",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text_expression": {
												"concat": [
													{
														"scalar": ""
													},
													{
														"variable": "step_001_result_1",
														"variable_path": "body.generated_text"
													}
												]
											}
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "end_action"
						},
						"variable": "step_825",
						"condition": {
							"eq": [
								{
									"variable": "step_001_result_1",
									"variable_path": "success"
								},
								{
									"scalar": true
								}
							]
						}
					}
				],
				"title": "No action matches",
				"action": "anything_else",
				"boosts": [],
				"handlers": [],
				"condition": {
					"expression": "anything_else"
				},
				"variables": [
					{
						"title": "One moment please ...",
						"variable": "step_001",
						"data_type": "any"
					},
					{
						"variable": "step_001_result_1",
						"data_type": "any"
					},
					{
						"title": "{variable}",
						"variable": "step_825",
						"data_type": "any"
					}
				],
				"disambiguation_opt_out": true
			},
			{
				"steps": [
					{
						"step": "digression_failure",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "connect_to_agent",
							"response": {
								"transfer_info": {
									"target": {}
								},
								"agent_available": {
									"message": "Let's send you to an available agent."
								},
								"agent_unavailable": {
									"message": "There are no agents available at this time. When one becomes available, we'll connect you."
								},
								"message_to_human_agent": ""
							}
						},
						"variable": "digression_failure",
						"condition": {
							"eq": [
								{
									"system_variable": "fallback_reason"
								},
								{
									"scalar": "Failed to confirm topic return"
								}
							]
						},
						"next_step": "step_001"
					},
					{
						"step": "step_001",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "I'm afraid I don't understand. I can connect you to an agent."
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "connect_to_agent",
							"response": {
								"transfer_info": {
									"target": {}
								},
								"agent_available": {
									"message": "Let's send you to an available agent."
								},
								"agent_unavailable": {
									"message": "There are no agents available at this time. When one becomes available, we'll connect you."
								},
								"message_to_human_agent": ""
							}
						},
						"variable": "step_001",
						"condition": {
							"eq": [
								{
									"system_variable": "fallback_reason"
								},
								{
									"scalar": "Step validation failed"
								}
							]
						},
						"next_step": "step_003"
					},
					{
						"step": "step_003",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "connect_to_agent",
							"response": {
								"transfer_info": {
									"target": {}
								},
								"agent_available": {
									"message": "Let's send you to an available agent."
								},
								"agent_unavailable": {
									"message": "There are no agents available at this time. When one becomes available, we'll connect you."
								},
								"message_to_human_agent": ""
							}
						},
						"variable": "step_003",
						"condition": {
							"eq": [
								{
									"system_variable": "fallback_reason"
								},
								{
									"scalar": "No action matches"
								}
							]
						},
						"next_step": "step_004"
					},
					{
						"step": "step_004",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "connect_to_agent",
							"response": {
								"transfer_info": {
									"target": {}
								},
								"agent_available": {
									"message": "Let's send you to an available agent."
								},
								"agent_unavailable": {
									"message": "There are no agents available at this time. When one becomes available, we'll connect you."
								},
								"message_to_human_agent": ""
							}
						},
						"variable": "step_004",
						"condition": {
							"eq": [
								{
									"system_variable": "fallback_reason"
								},
								{
									"scalar": "Danger word detected"
								}
							]
						},
						"next_step": "step_005"
					},
					{
						"step": "step_005",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "connect_to_agent",
							"response": {
								"transfer_info": {
									"target": {}
								},
								"agent_available": {
									"message": "Let's send you to an available agent."
								},
								"agent_unavailable": {
									"message": "There are no agents available at this time. When one becomes available, we'll connect you."
								},
								"message_to_human_agent": ""
							}
						},
						"variable": "step_005",
						"condition": {
							"eq": [
								{
									"system_variable": "fallback_reason"
								},
								{
									"scalar": "Profanity detected"
								}
							]
						}
					}
				],
				"title": "Fallback",
				"action": "fallback",
				"boosts": [],
				"handlers": [],
				"condition": {
					"intent": "fallback_connect_to_agent"
				},
				"variables": [
					{
						"title": "Topic return failed",
						"variable": "digression_failure",
						"data_type": "any"
					},
					{
						"title": "I'm afraid I don't understand. I can connect you to an agent.",
						"variable": "step_001",
						"data_type": "any"
					},
					{
						"title": "I am afraid I do not understand what you are asking, let me conn",
						"variable": "step_003",
						"data_type": "any"
					},
					{
						"title": "It seems this conversation would be best managed",
						"variable": "step_004",
						"data_type": "any"
					},
					{
						"title": "Profanity - It seems this conversation",
						"variable": "step_005",
						"data_type": "any"
					}
				],
				"next_action": "run_always",
				"disambiguation_opt_out": true
			},
			{
				"steps": [
					{
						"step": "danger_word_detected",
						"title": "Connect to agent",
						"handlers": [],
						"resolver": {
							"type": "fallback"
						},
						"variable": "danger_word_detected_variable",
						"condition": {
							"entity": "danger_words"
						},
						"next_step": "profanity_detected"
					},
					{
						"step": "profanity_detected",
						"title": "Show warning",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text_expression": {
												"concat": [
													{
														"scalar": "Please use appropriate language when interacting with the assistant."
													}
												]
											}
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [
							{
								"type": "max_hits",
								"handler": "max_hits_handler",
								"resolver": {
									"type": "fallback"
								}
							}
						],
						"max_hits": 2,
						"resolver": {
							"type": "end_action"
						},
						"variable": "profanity_detected_variable",
						"condition": {
							"entity": "profane_words"
						}
					}
				],
				"title": "Trigger word detected",
				"action": "run_always",
				"boosts": [],
				"handlers": [],
				"variables": [
					{
						"title": "Profanity detected",
						"variable": "danger_word_detected_variable",
						"data_type": "any"
					},
					{
						"title": "Profane word detected",
						"variable": "profanity_detected_variable",
						"data_type": "any"
					}
				],
				"next_action": "anything_else"
			},
			{
				"steps": [
					{
						"step": "step_001",
						"output": {
							"generic": [
								{
									"values": [
										{
											"text": "Welcome, how can I assist you?"
										}
									],
									"response_type": "text",
									"selection_policy": "sequential"
								}
							]
						},
						"handlers": [],
						"resolver": {
							"type": "end_action"
						},
						"variable": "step_001"
					}
				],
				"title": "Greet customer",
				"action": "welcome",
				"boosts": [],
				"handlers": [],
				"condition": {
					"expression": "welcome"
				},
				"variables": [
					{
						"variable": "step_001",
						"data_type": "any"
					}
				],
				"next_action": "fallback",
				"disambiguation_opt_out": true
			}
		],
		"intents": [
			{
				"intent": "fallback_connect_to_agent",
				"examples": [
					{
						"text": "Agent help"
					},
					{
						"text": "Call agent"
					},
					{
						"text": "Can I connect to an agent?"
					},
					{
						"text": "I would like to speak to a human"
					},
					{
						"text": "I would like to speak to someone"
					}
				],
				"description": "Please transfer me to an agent"
			}
		],
		"entities": [
			{
				"entity": "danger_words",
				"values": [],
				"fuzzy_match": false
			},
			{
				"entity": "profane_words",
				"values": [],
				"fuzzy_match": false
			},
			{
				"entity": "sys-yes-no",
				"values": []
			}
		],
		"metadata": {
			"api_version": {
				"major_version": "v2",
				"minor_version": "2018-11-08"
			}
		},
		"variables": [
			{
				"title": "k_docs",
				"variable": "k_docs",
				"data_type": "number",
				"description": "",
				"initial_value": {
					"scalar": 5
				}
			},
			{
				"title": "model_name",
				"variable": "model_name",
				"data_type": "string",
				"description": "",
				"initial_value": {
					"scalar": "google/flan-t5-xxl"
				}
			},
			{
				"title": "model_parameters",
				"variable": "model_parameters",
				"data_type": "any",
				"description": "",
				"initial_value": {
					"expression": "{\"decoding_method\":\"sample\",\"max_new_tokens\":200,\"min_new_tokens\":1,\"random_seed\":12345,\"stop_sequences\":[],\"temperature\":0,\"top_k\":50,\"top_p\":1,\"repetition_penalty\":1}"
				}
			}
		],
		"data_types": [],
		"collections": [],
		"counterexamples": [],
		"system_settings": {
			"variable": {
				"format": {
					"time": {
						"pattern": "short"
					},
					"currency": {
						"fraction_digits": 2
					}
				}
			},
			"off_topic": {
				"enabled": true
			},
			"auto_learn": {
				"apply": true
			},
			"topic_switch": {
				"enabled": true,
				"messages": {
					"enable_confirmation": true,
					"confirmation_failure": {
						"generic": [
							{
								"values": [
									{
										"text_expression": {
											"concat": [
												{
													"scalar": "I'm sorry, I did not catch that, please confirm."
												}
											]
										}
									}
								],
								"response_type": "text",
								"selection_policy": "sequential"
							}
						]
					},
					"confirmation_request": {
						"generic": [
							{
								"values": [
									{
										"text_expression": {
											"concat": [
												{
													"scalar": "Do you want to continue with the previous topic: "
												},
												{
													"system_variable": "digressed_from"
												},
												{
													"scalar": "?"
												}
											]
										}
									}
								],
								"response_type": "text",
								"selection_policy": "sequential"
							},
							{
								"options": [
									{
										"label": "Yes",
										"value": {
											"input": {
												"text": "Yes"
											}
										}
									},
									{
										"label": "No",
										"value": {
											"input": {
												"text": "No"
											}
										}
									}
								],
								"response_type": "option",
								"repeat_on_reprompt": true
							}
						]
					}
				},
				"max_tries": 3
			},
			"disambiguation": {
				"prompt": "Did you mean:",
				"enabled": true,
				"randomize": true,
				"max_suggestions": 5,
				"suggestion_text_policy": "title",
				"none_of_the_above_prompt": "None of the above",
				"use_connect_to_support_prompt": "Connect to support",
				"single_answer_clarification_prompt": "Something else"
			},
			"spelling_auto_correct": true
		},
		"learning_opt_out": false
	},
	"description": "created for assistant ec2b8685-0ff2-4476-ba13-368318a22ea8",
	"assistant_id": "ec2b8685-0ff2-4476-ba13-368318a22ea8",
	"workspace_id": "7c1fb445-a742-4ec3-af60-f7225151bd77",
	"dialog_settings": {},
	"next_snapshot_version": "1"
}